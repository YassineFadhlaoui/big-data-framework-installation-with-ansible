---
  - name: install and configure a big data framework (Hadoop, Hbase, OpenTSDB and Grafana)
    hosts: bigdataframework
    vars:
      IP_address: localhost
      Common_packages: "{{ lookup('env', 'PWD') }}/packages/"
      Ansible_root: "{{ lookup('env', 'PWD') }}"
      Framework_location: "/usr/local"
      Temprory_folder_name: "BigDataFrameworkPackages"
      OS_systemd_location: "/lib/systemd/system/"

      linux_user: "yassine"
      user_group: "yassine"

      vernemq_config: "conf/vernemq"
      vernemq_conf_path: "{{Ansible_root}}/{{vernemq_config}}"

      hadoop_conf: "conf/hadoop"
      Hadoop_archive: "hadoop-3.1.1.tar.gz"
      Uncompressed_hadoop: "hadoop-3.1.1"
      hadoop_host_ip: "localhost"

      hbase_conf: "conf/hbase"
      hbase_archive: "hbase-1.4.8-bin.tar.gz"
      Uncompressed_hbase: "hbase-1.4.8"
      zookeeper_port_: "2181"
      zookeeper_quorum: "localhost"
      zookeeper_data: "{{framework_base}}/zookeeper/data"

      Kafka_archive: "kafka_2.11-2.0.0.tgz"
      Uncompressed_kafka: "kafka_2.11-2.0.0"
      kafka_conf: "conf/kafka"

      zookeeper_archive: "zookeeper-3.4.13.tar.gz"
      Uncompressed_zookeeper: "zookeeper-3.4.13"
      zookeeper_conf: "conf/zookeeper"



      OpenTSDB_deb: "opentsdb-2.3.1_all.deb"

      grafana_deb_name: "grafana_5.1.4_amd64.deb"
      grafana_src_local: "{{Common_packages}}/{{grafana_deb_name}}"


      JAVA_archive: "jdk-8u191-linux-x64.tar.gz"
      JAVA_version: jdk1.8.0_191




#This is modular tempalte, every minor task is written separately in a role

    roles:
        # Create a temprory directory to copy packages to it
        - role: createTempDir
          vars:
            folder_name: "{{Temprory_folder_name}}"
        # Install and configure java we use here the role java
        # Java will be installed under /usr/local/java/jdk1.8.0_191
        #--------------------------Begin JAVA installation------------------------
        # - role: java
        #   vars:
        #     java_package: "{{Common_packages}}/{{JAVA_archive}}"
        #     path: "{{Temprory_folder_name}}"
        #     destination: "{{Framework_location}}"
        #     java_package_name: "{{JAVA_archive}}"
        #     java_version: "{{JAVA_version}}"

        #--------------------------End Java installation--------------------------
        #--------------------------Begin VERNEMQ installation------------------------
        #- role: vernemq
        #  vars:
        #    vernemq_package_destination: "{{Temprory_folder_name}}"
        #    vcert_source: "{{vernemq_conf_path}}/ssl/ca.crt"
        #    vcert_destination: "/etc/ssl/"
        #    vkey_source: "{{vernemq_conf_path}}/ssl/server.key"
        #    vkey_destination: "/etc/ssl/"
        #    vserver_cert_source: "{{vernemq_conf_path}}/ssl/server.crt"
        #    vserver_cert_destination:  "/etc/ssl/"
        #    vconfig_source: "{{vernemq_conf_path}}/vernemq.conf"
        #    vconfig_destination: "/etc/vernemq/vernemq.conf"
        #    vacl_source: "{{vernemq_conf_path}}/vmq.acl"
        #    vacl_destination: "/etc/vernemq/vmq.acl"
        #    vpasswd_source: "{{vernemq_conf_path}}/vmq.passwd"
        #    vpasswd_destination: "/etc/vernemq/vmq.passwd"
        #--------------------------End Verne MQ installation------------------------
        #--------------------------Begin Hadoop installation------------------------
        #- role: hadoop
        #  vars:
        #    framework_base:  "{{Framework_location}}"
        #    hadoop_package: "{{Hadoop_archive}}"
        #    hadoop_source: "{{Common_packages}}/{{Hadoop_archive}}"
        #    hadoop_destination: "{{Temprory_folder_name}}"
        #    path_to_Hadoop: "{{Temprory_folder_name}}"
        #    Uncompressed_hadoop_folder: "{{Uncompressed_hadoop}}"
        #    hadoop_owner: "{{linux_user}}"
        #    hadoop_group: "{{user_group}}"
        #    config_location: "{{Ansible_root}}/{{hadoop_conf}}"
        #    java_home: "{{Framework_location}}/java/{{JAVA_version}}"

        #--------------------------End Hadoop installation--------------------------
        #--------------------------Begin Hadoop installation------------------------
        - role: hbase
          vars:
           framework_base:  "{{Framework_location}}"
           hbase_package: "{{hbase_archive}}"
           hbase_source: "{{Common_packages}}/{{hbase_archive}}"
           hbase_destination: "{{Temprory_folder_name}}"
           path_to_hbase: "{{Temprory_folder_name}}"
           Uncompressed_hbase_folder: "{{Uncompressed_hbase}}"
           hbase_owner: "{{linux_user}}"
           hbase_group: "{{user_group}}"
           config_location: "{{Ansible_root}}/{{hbase_conf}}"
           java_home: "{{Framework_location}}/java/{{JAVA_version}}"
           hadoop_host: "{{hadoop_host_ip}}"
           zookeeper_port: "{{zookeeper_port_}}"
           zookeeper_quorum_hosts: "{{zookeeper_quorum}}"
           zookeeper_data_dir: "{{zookeeper_data}}"

        #--------------------------End Hadoop installation--------------------------
        #--------------------------Begin kafka installation------------------------
        # - role: kafka
        #   vars:
        #     framework_base:  "{{Framework_location}}"
        #     kafka_package: "{{Kafka_archive}}"
        #     kafka_source: "{{Common_packages}}/{{Kafka_archive}}"
        #     kafka_destination: "{{Temprory_folder_name}}"
        #     path_to_kafka: "{{Temprory_folder_name}}"
        #     Uncompressed_kafka_folder: "{{Uncompressed_kafka}}"
        #     kafka_owner: "{{linux_user}}"
        #     kafka_group: "{{user_group}}"
        #     config_location: "{{Ansible_root}}/{{kafka_conf}}"


        #--------------------------End Kafka installation--------------------------

        #--------------------------Begin zookeeper installation------------------------
        # - role: zookeeper
        #   vars:
        #     framework_base:  "{{Framework_location}}"
        #     zookeeper_package: "{{zookeeper_archive}}"
        #     zookeeper_source: "{{Common_packages}}/{{zookeeper_archive}}"
        #     zookeeper_destination: "{{Temprory_folder_name}}"
        #     path_to_zookeeper: "{{Temprory_folder_name}}"
        #     Uncompressed_zookeeper_folder: "{{Uncompressed_zookeeper}}"
        #     zookeeper_owner: "{{linux_user}}"
        #     zookeeper_group: "{{user_group}}"
        #     config_location: "{{Ansible_root}}/{{zookeeper_conf}}"
        #     service_dest: "{{OS_systemd_location}}"

        #--------------------------End zookeeper installation--------------------------
        #--------------------------Begin grafana installation------------------------
        # - role: Grafana
        #   vars:
        #     grafana_dest: "{{Temprory_folder_name}}"
        #     grafana_src: "{{grafana_src_local}}"
        #     grafana_deb: "{{grafana_deb_name}}"

        #--------------------------End grafana installation--------------------------
    # environment:
    #   http_proxy: http://172.16.1.2:8080
    #   https_proxy: https://172.16.1.2:8080
